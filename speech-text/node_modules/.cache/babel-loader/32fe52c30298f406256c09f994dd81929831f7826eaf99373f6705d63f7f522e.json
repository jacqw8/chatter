{"ast":null,"code":"var _jsxFileName = \"/Users/alliewu/Desktop/JS/speech-text/speech-text/src/Dictaphone.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition/lib/SpeechRecognition';\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dictaphone(_ref) {\n  _s();\n  let {\n    socket,\n    username,\n    room\n  } = _ref;\n  const commands = [{\n    command: 'reset',\n    callback: () => resetTranscript()\n  }, {\n    command: 'turn off',\n    callback: () => SpeechRecognition.stopListening()\n  }];\n  const {\n    transcript,\n    interimTranscript,\n    finalTranscript,\n    resetTranscript,\n    listening\n  } = useSpeechRecognition({\n    commands\n  });\n  const [messageList, setMessageList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [sentiment, setSentiment] = useState(\"\");\n  useEffect(() => {\n    if (finalTranscript !== '') {\n      console.log(finalTranscript);\n    }\n  }, [interimTranscript, finalTranscript]);\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Your browser does not support speech recognition software!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    console.log('Your browser does not support speech recognition software!');\n  }\n  const listenContinuously = () => {\n    resetTranscript();\n    SpeechRecognition.startListening({\n      continuous: true,\n      language: 'en'\n    });\n    console.log(transcript);\n  };\n  useEffect(() => {\n    function fetchData() {\n      const options = {\n        method: 'POST',\n        url: 'https://text-analysis12.p.rapidapi.com/sentiment-analysis/api/v1.1',\n        headers: {\n          'content-type': 'application/json',\n          'X-RapidAPI-Key': '79d583b800msha09b009baa19566p13aa3cjsnc39e7ea1d149',\n          'X-RapidAPI-Host': 'text-analysis12.p.rapidapi.com'\n        },\n        data: {\n          language: \"english\",\n          text: currentMessage\n        }\n      };\n      axios.request(options).then(function (response) {\n        setSentiment(response.data.sentiment);\n        setIsLoading(false);\n        // return response.data.sentiment;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n    fetchData();\n  });\n  if (listening) {\n    const messageData = {\n      room: room,\n      author: username,\n      time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes(),\n      message: transcript\n      // emotion: sentiment\n    };\n\n    socket.emit(\"send_voice\", messageData);\n  }\n  useEffect(() => {\n    socket.on(\"receive_voice\", data => {\n      setMessageList(list => [data]);\n      console.log(data);\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window-voice\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Voice Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      children: /*#__PURE__*/_jsxDEV(ScrollToBottom, {\n        className: \"message-container-voice\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          id: \"you\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: transcript\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-meta1\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"time\",\n                children: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"author\",\n                children: username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), messageList.map(messageContent => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            id: username === messageContent.author ? \"you\" : \"other\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: messageContent.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-meta1\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"time\",\n                  children: messageContent.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"author\",\n                  children: messageContent.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"listen\",\n        children: [\"Listening:\", ' ', listening ? 'on' : 'off']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: listenContinuously,\n          children: \"Listen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: SpeechRecognition.stopListening,\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n_s(Dictaphone, \"28sd0lOpP1wizS+NXdniHIE6WPk=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = Dictaphone;\n;\nexport default Dictaphone;\nvar _c;\n$RefreshReg$(_c, \"Dictaphone\");","map":{"version":3,"names":["React","useEffect","useState","SpeechRecognition","useSpeechRecognition","ScrollToBottom","Dictaphone","socket","username","room","commands","command","callback","resetTranscript","stopListening","transcript","interimTranscript","finalTranscript","listening","messageList","setMessageList","isLoading","setIsLoading","sentiment","setSentiment","console","log","browserSupportsSpeechRecognition","listenContinuously","startListening","continuous","language","fetchData","options","method","url","headers","data","text","currentMessage","axios","request","then","response","catch","error","messageData","author","time","Date","now","getHours","getMinutes","message","emit","on","list","map","messageContent"],"sources":["/Users/alliewu/Desktop/JS/speech-text/speech-text/src/Dictaphone.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition/lib/SpeechRecognition';\nimport ScrollToBottom from \"react-scroll-to-bottom\"\n\nfunction Dictaphone({ socket, username, room }) {\n\n    const commands = [\n        {\n            command: 'reset',\n            callback: () => resetTranscript()\n        },\n\n        {\n            command: 'turn off',\n            callback: () => SpeechRecognition.stopListening()\n        },\n\n    ]\n    const {\n        transcript,\n        interimTranscript,\n        finalTranscript,\n        resetTranscript,\n        listening,\n    } = useSpeechRecognition({ commands });\n\n    const [messageList, setMessageList] = useState([]);\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [sentiment, setSentiment] = useState(\"\");\n\n    useEffect(() => {\n        if (finalTranscript !== '') {\n            console.log(finalTranscript);\n        }\n    }, [interimTranscript, finalTranscript]);\n\n    if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n        return <span>Your browser does not support speech recognition software!</span>\n    }\n\n    if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n        console.log('Your browser does not support speech recognition software!');\n    }\n    const listenContinuously = () => {\n        resetTranscript();\n        SpeechRecognition.startListening({\n            continuous: true,\n            language: 'en',\n        });\n        console.log(transcript);\n    };\n\n    useEffect(() => {\n\n        function fetchData() {\n\n            const options = {\n                method: 'POST',\n                url: 'https://text-analysis12.p.rapidapi.com/sentiment-analysis/api/v1.1',\n                headers: {\n                    'content-type': 'application/json',\n                    'X-RapidAPI-Key': '79d583b800msha09b009baa19566p13aa3cjsnc39e7ea1d149',\n                    'X-RapidAPI-Host': 'text-analysis12.p.rapidapi.com'\n                },\n                data: {\n                    language: \"english\",\n                    text: currentMessage\n                }\n            };\n\n            axios.request(options)\n                .then(function (response) {\n                    setSentiment(response.data.sentiment);\n                    setIsLoading(false);\n                    // return response.data.sentiment;\n                }).catch(function (error) {\n                    console.error(error);\n                });\n        }\n\n        fetchData();\n    })\n\n    if (listening) {\n        const messageData = {\n            room: room,\n            author: username,\n            time: new Date(Date.now()).getHours() + \":\"\n                + new Date(Date.now()).getMinutes(),\n            message: transcript,\n            // emotion: sentiment\n        }\n        socket.emit(\"send_voice\", messageData);\n    }\n\n    useEffect(() => {\n        socket.on(\"receive_voice\", (data) => {\n            setMessageList((list) => [data]);\n            console.log(data);\n        });\n    }, [socket]);\n\n    return (\n        <div className='chat-window-voice'>\n            <div className='chat-header'>\n                <p>Voice Chat</p>\n            </div>\n            <div className='chat-body'>\n                <ScrollToBottom className='message-container-voice'>\n\n                    <div className='message'\n                        id=\"you\">\n\n                        <div>\n                            <div className='message-content'>\n                                <p>{transcript}</p>\n                            </div>\n                            <div className='message-meta1'>\n                                <p id=\"time\">{new Date(Date.now()).getHours() + \":\"\n                                    + new Date(Date.now()).getMinutes()}</p>\n                                <p id=\"author\">{username}</p>\n                            </div>\n                        </div>\n                    </div>\n                    {messageList.map((messageContent) => {\n                        return (\n                            <div className=\"message\"\n                                id={username === messageContent.author ? \"you\" : \"other\"}>\n                                <div>\n                                    <div className='message-content'>\n                                        <p>{messageContent.message}</p>\n                                    </div>\n                                    <div className='message-meta1'>\n                                        <p id=\"time\">{messageContent.time}</p>\n                                        <p id=\"author\">{messageContent.author}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </ScrollToBottom>\n            </div>\n            <div className='chat-footer'>\n                <span id='listen'>\n                    Listening:\n                    {' '}\n                    {listening ? 'on' : 'off'}\n                </span>\n                <div>\n                    <button type=\"button\" onClick={listenContinuously}>Listen</button>\n                    <button type=\"button\" onClick={SpeechRecognition.stopListening}>Stop</button>\n                    {/* <button type=\"button\" onClick={resetTranscript}>Reset</button> */}\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\nexport default Dictaphone;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}