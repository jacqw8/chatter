{"ast":null,"code":"var _jsxFileName = \"/Users/alliewu/Desktop/JS/speech-text/speech-text/src/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport { useSpeechSynthesis } from 'react-speech-kit';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat(_ref) {\n  _s();\n  let {\n    socket,\n    username,\n    room\n  } = _ref;\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const {\n    speak\n  } = useSpeechSynthesis();\n  const [msg, setMsg] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [sentiment, setSentiment] = useState(\"\");\n  const fetchData = async () => {\n    const options = {\n      method: 'POST',\n      url: 'https://text-analysis12.p.rapidapi.com/sentiment-analysis/api/v1.1',\n      headers: {\n        'content-type': 'application/json',\n        'X-RapidAPI-Key': '79d583b800msha09b009baa19566p13aa3cjsnc39e7ea1d149',\n        'X-RapidAPI-Host': 'text-analysis12.p.rapidapi.com'\n      },\n      data: {\n        language: \"english\",\n        text: currentMessage\n      }\n    };\n    await axios.request(options).then(function (response) {\n      console.log(response.data);\n      setIsLoading(true);\n      setSentiment(response.data.sentiment);\n      setIsLoading(false);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      fetchData();\n      console.log(currentMessage, sentiment);\n      const messageData = {\n        room: room,\n        author: username,\n        message: currentMessage,\n        emotion: sentiment,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n      };\n      await socket.emit(\"send_message\", messageData);\n      setMessageList(list => [...list, messageData]);\n      setCurrentMessage(\"\");\n    }\n  };\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      setMessageList(list => [...list, data]);\n      setMsg(data.message);\n    });\n  }, [socket]);\n  if (msg) {\n    speak({\n      text: msg\n    });\n    setMsg(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Text Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      children: /*#__PURE__*/_jsxDEV(ScrollToBottom, {\n        className: \"message-container\",\n        children: messageList.map(messageContent => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            id: username === messageContent.author ? \"you\" : \"other\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: messageContent.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"time\",\n                  children: messageContent.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"author\",\n                  children: messageContent.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 41\n                }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Loading\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: messageContent.emotion\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: currentMessage,\n        placeholder: \"Send a message\",\n        onChange: event => {\n          setCurrentMessage(event.target.value);\n        },\n        onKeyPress: event => {\n          event.key === \"Enter\" && sendMessage();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"\\u25BA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"78y4Jjt/mOv8wp2w2M2FqGdn48Y=\", false, function () {\n  return [useSpeechSynthesis];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","ScrollToBottom","useSpeechSynthesis","axios","Chat","socket","username","room","currentMessage","setCurrentMessage","messageList","setMessageList","speak","msg","setMsg","isLoading","setIsLoading","sentiment","setSentiment","fetchData","options","method","url","headers","data","language","text","request","then","response","console","log","catch","error","sendMessage","messageData","author","message","emotion","time","Date","now","getHours","getMinutes","emit","list","on","map","messageContent","event","target","value","key"],"sources":["/Users/alliewu/Desktop/JS/speech-text/speech-text/src/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport { useSpeechSynthesis } from 'react-speech-kit';\nimport axios from \"axios\";\n\nfunction Chat({ socket, username, room }) {\n    const [currentMessage, setCurrentMessage] = useState(\"\");\n    const [messageList, setMessageList] = useState([]);\n    const { speak } = useSpeechSynthesis();\n    const [msg, setMsg] = useState(\"\");\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [sentiment, setSentiment] = useState(\"\");\n\n    const fetchData = async () => {\n\n        const options = {\n            method: 'POST',\n            url: 'https://text-analysis12.p.rapidapi.com/sentiment-analysis/api/v1.1',\n            headers: {\n                'content-type': 'application/json',\n                'X-RapidAPI-Key': '79d583b800msha09b009baa19566p13aa3cjsnc39e7ea1d149',\n                'X-RapidAPI-Host': 'text-analysis12.p.rapidapi.com'\n            },\n            data: {\n                language: \"english\",\n                text: currentMessage\n            }\n        };\n\n        await axios.request(options)\n            .then(function (response) {\n                console.log(response.data);\n                setIsLoading(true);\n                setSentiment(response.data.sentiment);\n                setIsLoading(false);\n            }).catch(function (error) {\n                console.error(error);\n            });\n    }\n\n    const sendMessage = async () => {\n        if (currentMessage !== \"\") {\n            fetchData();\n            console.log(currentMessage, sentiment)\n            const messageData = {\n                room: room,\n                author: username,\n                message: currentMessage,\n                emotion: sentiment,\n                time: new Date(Date.now()).getHours() + \":\"\n                    + new Date(Date.now()).getMinutes()\n            };\n            await socket.emit(\"send_message\", messageData);\n            setMessageList((list) => [...list, messageData]);\n            setCurrentMessage(\"\");\n        }\n    };\n\n    useEffect(() => {\n\n        socket.on(\"receive_message\", (data) => {\n            setMessageList((list) => [...list, data]);\n            setMsg(data.message);\n        });\n    }, [socket]);\n\n    if (msg) {\n        speak({ text: msg });\n        setMsg(\"\");\n    }\n\n\n    return (\n        <div className='chat-window'>\n            <div className='chat-header'>\n                <p>Text Chat</p>\n            </div>\n            <div className='chat-body'>\n                <ScrollToBottom className='message-container'>\n                    {messageList.map((messageContent) => {\n                        return (\n                            <div className=\"message\"\n                                id={username === messageContent.author ? \"you\" : \"other\"}>\n                                <div>\n                                    <div className='message-content'>\n                                        <p>{messageContent.message}</p>\n                                    </div>\n                                    <div className='message-meta'>\n                                        <p id=\"time\">{messageContent.time}</p>\n                                        <p id=\"author\">{messageContent.author}</p>\n                                        {isLoading ? (\n                                            <div>\n                                                <p>Loading</p>\n                                            </div>\n                                        ) : (\n                                            <div>\n                                                <p>{messageContent.emotion}</p>\n                                            </div>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </ScrollToBottom>\n            </div>\n            <div className='chat-footer'>\n                <input\n                    type=\"text\"\n                    value={currentMessage}\n                    placeholder=\"Send a message\"\n                    onChange={(event) => {\n                        setCurrentMessage(event.target.value)\n                    }}\n                    onKeyPress={(event) => {\n                        event.key === \"Enter\" && sendMessage()\n                    }}\n                />\n                <button onClick={sendMessage}>&#9658;</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Chat"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}