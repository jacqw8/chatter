{"ast":null,"code":"var _jsxFileName = \"/Users/alliewu/Desktop/JS/speech-text/speech-text/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport io from 'socket.io-client';\nimport { useState } from \"react\";\nimport './App.css';\nimport Chat from \"./Chat\";\nimport Dictaphone from \"./Dictaphone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\nconst App = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const joinRoom = () => {\n    if (username !== \"\" && room !== \"\") {\n      socket.emit(\"join_room\", room);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"joinChatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Join Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        onChange: event => {\n          setUsername(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Room ID\",\n        onChange: event => {\n          setRoom(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: joinRoom,\n        children: \"Join a Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chat, {\n        socket: socket,\n        username: username,\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dictaphone, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"EvQ3yTzpkY6BE+Nt7fmIxnkn+xo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","io","useState","Chat","Dictaphone","socket","connect","App","username","setUsername","room","setRoom","joinRoom","emit","event","target","value"],"sources":["/Users/alliewu/Desktop/JS/speech-text/speech-text/src/App.js"],"sourcesContent":["import React from \"react\";\nimport io from 'socket.io-client';\nimport { useState } from \"react\";\n\nimport './App.css'\nimport Chat from \"./Chat\";\n\nimport Dictaphone from \"./Dictaphone\";\n\nconst socket = io.connect(\"http://localhost:3001\");\nconst App = () => {\n  const [username, setUsername] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n\n  const joinRoom = () => {\n    if (username !== \"\" && room !== \"\") {\n      socket.emit(\"join_room\", room);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"joinChatContainer\">\n        <h3>Join Chat</h3>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          onChange={(event) => {\n            setUsername(event.target.value);\n          }} />\n        <input\n          type=\"text\"\n          placeholder=\"Room ID\"\n          onChange={(event) => {\n            setRoom(event.target.value);\n          }} />\n        <button onClick={joinRoom}>Join a Room</button>\n\n        <Chat socket={socket} username={username} room={room}></Chat>\n        <Dictaphone></Dictaphone>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,kBAAkB;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,QAAQ;AAEzB,OAAOC,UAAU,MAAM,cAAc;AAAC;AAEtC,MAAMC,MAAM,GAAGJ,EAAE,CAACK,OAAO,CAAC,uBAAuB,CAAC;AAClD,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMU,QAAQ,GAAG,MAAM;IACrB,IAAIJ,QAAQ,KAAK,EAAE,IAAIE,IAAI,KAAK,EAAE,EAAE;MAClCL,MAAM,CAACQ,IAAI,CAAC,WAAW,EAAEH,IAAI,CAAC;IAChC;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAK,SAAS,EAAC,mBAAmB;MAAA,wBAChC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eAClB;QACE,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,UAAU;QACtB,QAAQ,EAAGI,KAAK,IAAK;UACnBL,WAAW,CAACK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;QACjC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eACP;QACE,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,SAAS;QACrB,QAAQ,EAAGF,KAAK,IAAK;UACnBH,OAAO,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;QAC7B;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eACP;QAAQ,OAAO,EAAEJ,QAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB,eAE/C,QAAC,IAAI;QAAC,MAAM,EAAEP,MAAO;QAAC,QAAQ,EAAEG,QAAS;QAAC,IAAI,EAAEE;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC7D,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA,QAAc;IAAA;MAAA;MAAA;MAAA;IAAA;EACrB;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,GAjCKH,GAAG;AAAA,KAAHA,GAAG;AAmCT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}