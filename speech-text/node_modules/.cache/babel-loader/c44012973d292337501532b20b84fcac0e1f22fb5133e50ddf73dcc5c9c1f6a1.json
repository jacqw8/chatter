{"ast":null,"code":"var _jsxFileName = \"/Users/alliewu/Desktop/JS/speech-text/speech-text/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition/lib/SpeechRecognition\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupporsSpeechRecognition\n  } = useSpeechRecognition();\n  if (!browserSupporsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Your browser doesn't support Speech to Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Microphone: \", listening ? \"on\" : \"off\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"buttton\", {\n      onClick: SpeechRecognition.startListening,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"buttton\", {\n      onClick: SpeechRecognition.stopListening,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"buttton\", {\n      onClick: resetTranscript,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: transcript\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"gLB4pSVSW+jGg7TIgryfaE6Hfyg=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","SpeechRecognition","useSpeechRecognition","App","transcript","listening","resetTranscript","browserSupporsSpeechRecognition","startListening","stopListening"],"sources":["/Users/alliewu/Desktop/JS/speech-text/speech-text/src/App.js"],"sourcesContent":["import React from \"react\";\n\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition/lib/SpeechRecognition\";\n\nimport './App.css'\n\nconst App = () => {\n\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupporsSpeechRecognition\n  } = useSpeechRecognition()\n  if (!browserSupporsSpeechRecognition) {\n    return <span>Your browser doesn't support Speech to Text</span>\n  }\n  return (\n    <div>\n      <p>Microphone: {listening ? \"on\" : \"off\"}</p>\n      <buttton onClick={SpeechRecognition.startListening}>Start</buttton>\n      <buttton onClick={SpeechRecognition.stopListening}>Stop</buttton>\n      <buttton onClick={resetTranscript}>Reset</buttton>\n      <p>{transcript}</p>\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,iBAAiB,IAAIC,oBAAoB,QAAQ,gDAAgD;AAExG,OAAO,WAAW;AAAA;AAElB,MAAMC,GAAG,GAAG,MAAM;EAAA;EAEhB,MAAM;IACJC,UAAU;IACVC,SAAS;IACTC,eAAe;IACfC;EACF,CAAC,GAAGL,oBAAoB,EAAE;EAC1B,IAAI,CAACK,+BAA+B,EAAE;IACpC,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwD;EACjE;EACA,oBACE;IAAA,wBACE;MAAA,2BAAgBF,SAAS,GAAG,IAAI,GAAG,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAC7C;MAAS,OAAO,EAAEJ,iBAAiB,CAACO,cAAe;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eACnE;MAAS,OAAO,EAAEP,iBAAiB,CAACQ,aAAc;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe,eACjE;MAAS,OAAO,EAAEH,eAAgB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAClD;MAAA,UAAIF;IAAU;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACf;AAEV,CAAC;AAAA,GApBKD,GAAG;EAAA,QAOHD,oBAAoB;AAAA;AAAA,KAPpBC,GAAG;AAsBT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}