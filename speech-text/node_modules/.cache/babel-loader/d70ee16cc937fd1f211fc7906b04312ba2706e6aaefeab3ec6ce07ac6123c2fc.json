{"ast":null,"code":"var _jsxFileName = \"/Users/alliewu/Desktop/JS/speech-text/speech-text/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition/lib/SpeechRecognition\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Your browser doesn't support Speech to Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n  const listenContinuously = () => {\n    SpeechRecognition.startListening({\n      continuous: true,\n      language: 'en-GB'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Microphone: \", listening ? \"on\" : \"off\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: listenContinuously,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: SpeechRecognition.stopListening,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetTranscript,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: transcript\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9TY55m6jT7atq/3XCFZzGXIUmHE=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","SpeechRecognition","useSpeechRecognition","App","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","listenContinuously","startListening","continuous","language","stopListening"],"sources":["/Users/alliewu/Desktop/JS/speech-text/speech-text/src/App.js"],"sourcesContent":["import React from \"react\";\n\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition/lib/SpeechRecognition\";\n\nimport './App.css'\n\nconst App = () => {\n\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition()\n  if (!browserSupportsSpeechRecognition) {\n    return <span>Your browser doesn't support Speech to Text</span>\n  }\n  const listenContinuously = () => {\n    SpeechRecognition.startListening({\n      continuous: true,\n      language: 'en-GB',\n    });\n  };\n  return (\n    <div>\n      <p>Microphone: {listening ? \"on\" : \"off\"}</p>\n      <button onClick={listenContinuously}>Start</button>\n      <button onClick={SpeechRecognition.stopListening}>Stop</button>\n      <button onClick={resetTranscript}>Reset</button>\n      <p>{transcript}</p>\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,iBAAiB,IAAIC,oBAAoB,QAAQ,gDAAgD;AAExG,OAAO,WAAW;AAAA;AAElB,MAAMC,GAAG,GAAG,MAAM;EAAA;EAEhB,MAAM;IACJC,UAAU;IACVC,SAAS;IACTC,eAAe;IACfC;EACF,CAAC,GAAGL,oBAAoB,EAAE;EAC1B,IAAI,CAACK,gCAAgC,EAAE;IACrC,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwD;EACjE;EACA,MAAMC,kBAAkB,GAAG,MAAM;IAC/BP,iBAAiB,CAACQ,cAAc,CAAC;MAC/BC,UAAU,EAAE,IAAI;MAChBC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC;EACD,oBACE;IAAA,wBACE;MAAA,2BAAgBN,SAAS,GAAG,IAAI,GAAG,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAC7C;MAAQ,OAAO,EAAEG,kBAAmB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe,eACnD;MAAQ,OAAO,EAAEP,iBAAiB,CAACW,aAAc;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eAC/D;MAAQ,OAAO,EAAEN,eAAgB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe,eAChD;MAAA,UAAIF;IAAU;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACf;AAEV,CAAC;AAAA,GA1BKD,GAAG;EAAA,QAOHD,oBAAoB;AAAA;AAAA,KAPpBC,GAAG;AA4BT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}